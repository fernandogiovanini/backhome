// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	io "io"

	backhome "github.com/fernandogiovanini/backhome/internal/backhome"

	mock "github.com/stretchr/testify/mock"
)

// FileListOperations is an autogenerated mock type for the FileListOperations type
type FileListOperations struct {
	mock.Mock
}

// CopyTo provides a mock function with given fields: local, writer
func (_m *FileListOperations) CopyTo(local *backhome.Local, writer io.Writer) error {
	ret := _m.Called(local, writer)

	if len(ret) == 0 {
		panic("no return value specified for CopyTo")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*backhome.Local, io.Writer) error); ok {
		r0 = rf(local, writer)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Count provides a mock function with no fields
func (_m *FileListOperations) Count() int {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Count")
	}

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// NewFileListOperations creates a new instance of FileListOperations. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewFileListOperations(t interface {
	mock.TestingT
	Cleanup(func())
}) *FileListOperations {
	mock := &FileListOperations{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
